name: Extract OpenWrt RootFS

on:
  workflow_dispatch:
    inputs:
      firmware_url:
        description: 'URL firmware OpenWrt (MediaFire, Google Drive, Terabox, atau direct link)'
        required: true

jobs:
  extract-rootfs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y binwalk squashfs-tools wget curl p7zip-full aria2 xz-utils unzip python3-pip
        pip3 install --upgrade gdown

    - name: Download firmware
      run: |
        URL="${{ github.event.inputs.firmware_url }}"
        echo "Downloading firmware from $URL"

        FILENAME="firmware"
        if [[ "$URL" == *"drive.google.com"* ]]; then
          gdown "$URL" -O $FILENAME
        elif [[ "$URL" == *"mediafire.com"* ]]; then
          wget -O $FILENAME "$URL"
        elif [[ "$URL" == *"terabox.com"* ]]; then
          aria2c -o $FILENAME "$URL"
        else
          wget -O $FILENAME "$URL"
        fi

    - name: Decompress firmware if needed
      run: |
        EXT="${FILENAME##*.}"
        if [[ "$EXT" == "gz" ]]; then
          gunzip -c "$FILENAME" > firmware
        elif [[ "$EXT" == "xz" ]]; then
          unxz -c "$FILENAME" > firmware
        else
          cp "$FILENAME" firmware
        fi
        echo "Decompressed firmware:"
        file firmware

    - name: Extract rootfs
      run: |
        mkdir -p rootfs
        binwalk -e firmware
        echo "Checking extracted folders:"
        ls -la _firmware.extracted || true

        # Try SquashFS first
        SQUASHFS_PATH=$(find _firmware.extracted -type d -name 'squashfs-root' | head -n1)
        if [ -d "$SQUASHFS_PATH" ]; then
          echo "SquashFS detected at $SQUASHFS_PATH"
          unsquashfs -d rootfs "$SQUASHFS_PATH"
        else
          # Check for UBI
          UBI_IMG=$(find _firmware.extracted -type f -name '*.ubi' | head -n1)
          if [ -f "$UBI_IMG" ]; then
            echo "UBI image detected: $UBI_IMG"
            cp -r _firmware.extracted/* rootfs/
            echo "UBI extraction done (manual processing may be needed)"
          else
            # Check for tar archive
            if file firmware | grep -q 'tar archive'; then
              echo "Tar archive detected"
              tar -xf firmware -C rootfs
            else
              echo "Unknown firmware type!"
              exit 1
            fi
          fi
        fi

    - name: Compress rootfs
      run: |
        tar -czvf rootfs.tar.gz -C rootfs .

    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: rootfs
        path: rootfs.tar.gz
        

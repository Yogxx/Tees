name: Extract OpenWrt RootFS

on:
  workflow_dispatch:
    inputs:
      firmware_url:
        description: 'URL firmware OpenWrt (MediaFire, Google Drive, Mega, Terabox, atau direct link)'
        required: true

jobs:
  extract-rootfs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y binwalk squashfs-tools wget curl p7zip-full aria2 xz-utils unzip lsb-release
        sudo apt-get install -y gdown
        # Install MegaCMD untuk Mega.nz
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:meganz/ppa
        sudo apt-get update
        sudo apt-get install -y megacmd

    - name: Download firmware
      run: |
        URL="${{ github.event.inputs.firmware_url }}"
        echo "Downloading firmware from $URL"
        
        FILENAME="firmware"
        if [[ "$URL" == *"drive.google.com"* ]]; then
          gdown "$URL" -O $FILENAME
        elif [[ "$URL" == *"mega.nz"* ]]; then
          megadl "$URL" --path ./firmware
        elif [[ "$URL" == *"mediafire.com"* ]]; then
          wget -O $FILENAME "$URL"
        elif [[ "$URL" == *"terabox.com"* ]]; then
          aria2c -o $FILENAME "$URL"
        else
          wget -O $FILENAME "$URL"
        fi

    - name: Decompress firmware if compressed
      run: |
        EXT="${FILENAME##*.}"
        echo "File extension: $EXT"
        if [[ "$EXT" == "gz" ]]; then
          mv $FILENAME firmware.gz
          gunzip -c firmware.gz > firmware
        elif [[ "$EXT" == "xz" ]]; then
          mv $FILENAME firmware.xz
          unxz -c firmware.xz > firmware
        fi

    - name: Extract rootfs
      run: |
        if file firmware | grep -q 'Squashfs'; then
          echo "SquashFS detected"
          binwalk -e firmware
          unsquashfs -d rootfs _firmware.extracted/squashfs-root.squashfs
        elif file firmware | grep -q 'UBI'; then
          echo "UBI detected"
          binwalk -e firmware
          mkdir rootfs
          cp -r _firmware.extracted/* rootfs/  # UBI extraction placeholder
          echo "UBI extraction done (manual processing may be needed)"
        elif file firmware | grep -q 'tar archive'; then
          echo "tar archive detected"
          mkdir rootfs
          tar -xf firmware -C rootfs
        else
          echo "Unknown firmware type!"
          exit 1
        fi

    - name: Compress rootfs
      run: |
        tar -czvf rootfs.tar.gz -C rootfs .

    - name: Upload rootfs artifact
      uses: actions/upload-artifact@v4
      with:
        name: rootfs
        path: rootfs.tar.gz
        
